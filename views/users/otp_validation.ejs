<%- include('../partials/header') %>

<div class="container text-center pt-5 mt-5 border w-50">
    <div class="header__logo">
        <a class="text-decoration-none"><h1 class="fw-bold" style="font-style: italic;">Glassics</h1></a>
    </div>
    <h3 class="pt-3 pb-3">OTP Verification</h3>
    <h5>Please enter the OTP below</h5>
    <p id="message" class="text-danger fw-bold"></p>
    <div class="otp-input pt-3">
        <form id="otpForm">
            <div class="form-group text-center mb-3">
                <input class="form-control" type="text" pattern="[0-9]*" name="otp" minlength="6" maxlength="6" required>
            </div>
            <button class="btn btn-secondary" type="submit">Verify OTP</button>
        </form>
    </div>
    <p>Not received the code? You can Resend code after 1 minute</p>
    <div class="text-center mb-3">
        <div class="d-flex justify-content-center">
            <button id="resendOTPBtn" class="btn btn-primary me-3" style="display:none;">Resend OTP</button>
            <span id="otp-timer" class="otp-timer text-danger btn btn-warning fw-bold">01:00</span>  
        </div>
    </div>
</div>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    let otpDurationSeconds = 60;
const otpTimerElement = document.getElementById('otp-timer');
const otpForm = document.getElementById('otpForm');
const resendOTPBtn = document.getElementById('resendOTPBtn');
const messageElement = document.getElementById('message');
let timerInterval;

document.addEventListener("DOMContentLoaded", function() {
    const currentPage = window.location.pathname;

    if (currentPage === '/otp_validation') {
        const startTime = sessionStorage.getItem('otpStartTime');

        if (!startTime) {
            sessionStorage.setItem('otpStartTime', Date.now());
        } else {
            const elapsedTime = Math.floor((Date.now() - parseInt(startTime)) / 1000);
            otpDurationSeconds = Math.max(60 - elapsedTime, 0);
        }

        startOTPTimer();
    } else {
        sessionStorage.removeItem('otpStartTime');
    }

    resendOTPBtn.addEventListener('click', resendOTP);
});

function updateOTPTimer() {
    const elapsedTime = Math.floor((Date.now() - parseInt(sessionStorage.getItem('otpStartTime'))) / 1000);
    const remainingTime = otpDurationSeconds - elapsedTime;

    if (remainingTime <= 0) {
        clearInterval(timerInterval);
        otpTimerElement.textContent = '00:00';
        resendOTPBtn.style.display = 'block';
        otpForm.reset();
        return;
    }

    const minutes = Math.floor(remainingTime / 60);
    const seconds = remainingTime % 60;
    otpTimerElement.textContent = `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;
}

function startOTPTimer() {
    updateOTPTimer();
    timerInterval = setInterval(updateOTPTimer, 1000);
}

async function resendOTP() {
    try {
        const response = await fetch('/otp_resend', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            }
        });

        const data = await response.json();
        messageElement.textContent = data.message;

        if (response.ok) {
            sessionStorage.setItem('otpStartTime', Date.now());
            otpDurationSeconds = 60;
            clearInterval(timerInterval);
            startOTPTimer();
            resendOTPBtn.style.display = 'none';
        } else {
            messageElement.textContent = 'Error resending OTP';
        }
    } catch (error) {
        messageElement.textContent = 'Error resending OTP';
    }
}

otpForm.addEventListener('submit', async function(event) {
    event.preventDefault();

    const formData = new FormData(otpForm);
    const otp = formData.get('otp');

    try {
        const response = await fetch('/otp_validation', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ otp })
        });

        const data = await response.json();
        messageElement.textContent = data.message;

        if (response.ok) {
            sessionStorage.removeItem('otpStartTime');
            Swal.fire({
                icon: 'success',
                title: 'OTP Verified',
                text: data.message,
            }).then(() => {
                setTimeout(() => location.href = '/login', 1500);
            });
        } else {
            messageElement.textContent = data.message;
        }
    } catch (error) {
        messageElement.textContent = 'Error validating OTP';
    }
});

</script>

<%- include('../partials/footer') %>

